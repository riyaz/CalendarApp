workflows:
    ios-workflow:
    name: ios_workflow
    environment:
        groups:
        - certificate_credentials # <-- (Includes CERTIFICATE_PRIVATE_KEY)
        - other
        # Add the group environment variables in Codemagic UI (either in Application/Team variables) - https://docs.codemagic.io/variables/environment-variable-groups/
        vars:
        XCODE_WORKSPACE: "Calendar.xcodeproj"  # PUT YOUR WORKSPACE NAME HERE
        XCODE_SCHEME: "Calender" # PUT THE NAME OF YOUR SCHEME HERE
        xcode: latest
        cocoapods: default
    triggering:
        events:
        - push
        branch_patterns:
        - pattern: master
            include: true
            source: true
scripts:
    - name: Set up keychain to be used for code signing using Codemagic CLI 'keychain' command
    script: keychain initialize
    - name: Set up Provisioning profiles from environment variables
    script: |
      PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
      mkdir -p "$PROFILES_HOME"
      PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
      echo ${FCI_PROVISIONING_PROFILE} | base64 --decode > "$PROFILE_PATH"
      echo "Saved provisioning profile $PROFILE_PATH"
    - name: Set up signing certificate
    script: |
      echo $FCI_CERTIFICATE | base64 --decode > /tmp/certificate.p12
      if [ -z ${FCI_CERTIFICATE_PASSWORD+x} ]; then
        # when using a certificate that is not password-protected
        keychain add-certificates --certificate /tmp/certificate.p12
      else
        # when using a password-protected certificate
        keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $FCI_CERTIFICATE_PASSWORD
      fi
    - name: Set up code signing settings on Xcode project        script: xcode-project use-profiles
        - name: Build ipa for distribution
        script: xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
    artifacts:
        - build/ios/ipa/*.ipa
        - /tmp/xcodebuild_logs/*.log
        - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    publishing:
        app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY      # Contents of the API key
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER    # Alphanumeric value that identifies the API key
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID      # Alphanumeric value that identifies who created the API key
        submit_to_testflight: false        # Optional boolean, defaults to false. Whether or not to submit the uploaded build to TestFlight to automatically enroll your build to beta testers.
        # beta_groups:                                  # Specify the names of beta tester groups that will get access to the build once it has passed beta review.
        #     - group name 1
        #     - group name 2


# ios-project-debug: # workflow ID
#    name: iOS debug # workflow name
#    environment:
#      xcode: latest
#      cocoapods: default
#      vars:
#          XCODE_PROJECT: "Calendar.xcodeproj" # <-- Put the name of your project here.
#          XCODE_SCHEME: "Calendar" # <-- Put the name of your scheme here.
#    scripts:
##      - name: Run tests
##        script: |
##          xcodebuild \
##          -project "$XCODE_PROJECT" \
##          -scheme "$XCODE_SCHEME" \
##          -sdk iphonesimulator \
##          -destination 'platform=iOS Simulator,name=iPhone 12,OS=14.1' \
##          clean build test CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO
#      - name: Build debug app
#        script: |
#          xcodebuild build -project "$XCODE_PROJECT" \
#          -scheme "$XCODE_SCHEME" \
#          CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO
#    artifacts:
#      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
    publishing:
        email:
        recipients:
            - saranjith.krishnan@cred.club
